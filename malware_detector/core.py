import os
import magic
from oletools.olevba import VBA_Parser
import yara
from colorama import Fore, Style

def analyze_file(file_path, yara_rules):

    file_type = magic.from_file(file_path, mime=True)

    macros_found = False
    suspicious_pattern = []
    yara_matches = []

    # Check for macros (for office files)
    if "office" in file_type:
        vbaparser = VBA_Parser(file_path)
        if vbaparser.detect_vba_macros():
            macros_found = True
            for vba_code in vbaparser.extract_all_macros():
                suspicious_pattern.extend(find_suspicious_patterns(vba_code))
            
    
    
    # Check for YARA rule matches
    matches = yara_rules.match(file_path)
    if matches:
        yara_matches = [match.rule for match in matches]
    
    # Determine if the file is malicious
    is_malicious = macros_found or bool(yara_matches)

    # Generate Report
    details = { 
        "macros_found": macros_found,
        "suspicious_patterns": suspicious_pattern,
        "yara_matches": yara_matches
    }

    report = generate_report(file_path, is_malicious, details)
    return report

def find_suspicious_patterns(text):
    """Find suspicious patterns in text (e.g. PowerShell command)."""
    suspicious_patterns=[]
    if "powershell.exe" in text.lower():
        suspicious_patterns.append("powershell.exe")
    if "Invoke-Expression" in text.lower():
        suspicious_patterns.append("Invoke-Expression")
    return suspicious_patterns

def generate_report(file_path, is_malicious, details):
    file_name = os.path.basename(file_path)
    file_size = os.path.getsize(file_path)
    file_type = magic.from_file(file_path, mime=True)

    verdict = Fore.RED + "Malicious" + Style.RESET_ALL if is_malicious else Fore.GREEN + "Safe" + Style.RESET_ALL

    report = f"""
    === Malware Detection Report ===
    File Name: {file_name}
    File Type: {file_type}
    File Size: {file_size} bytes
    Verdict: {verdict}
    Details:
    - Macros Found: {details.get('macros_found', False)}
    - Suspicious Patterns: {', ' .join(details.get('suspicious_patterns', []))}
    - Yara Rule Matches: {', ' .join(details.get('yara_matches', []))}

    """

    return report
